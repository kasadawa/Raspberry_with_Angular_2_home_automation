!function(e){function r(e,r,o){return 4===arguments.length?t.apply(this,arguments):void n(e,{declarative:!0,deps:r,declare:o})}function t(e,r,t,o){n(e,{declarative:!1,deps:r,executingRequire:t,execute:o})}function n(e,r){r.name=e,e in v||(v[e]=r),r.normalizedDeps=r.deps}function o(e,r){if(r[e.groupIndex]=r[e.groupIndex]||[],-1==g.call(r[e.groupIndex],e)){r[e.groupIndex].push(e);for(var t=0,n=e.normalizedDeps.length;n>t;t++){var a=e.normalizedDeps[t],u=v[a];if(u&&!u.evaluated){var d=e.groupIndex+(u.declarative!=e.declarative);if(void 0===u.groupIndex||u.groupIndex<d){if(void 0!==u.groupIndex&&(r[u.groupIndex].splice(g.call(r[u.groupIndex],u),1),0==r[u.groupIndex].length))throw new TypeError("Mixed dependency cycle detected");u.groupIndex=d}o(u,r)}}}}function a(e){var r=v[e];r.groupIndex=0;var t=[];o(r,t);for(var n=!!r.declarative==t.length%2,a=t.length-1;a>=0;a--){for(var u=t[a],i=0;i<u.length;i++){var s=u[i];n?d(s):l(s)}n=!n}}function u(e){return y[e]||(y[e]={name:e,dependencies:[],exports:{},importers:[]})}function d(r){if(!r.module){var t=r.module=u(r.name),n=r.module.exports,o=r.declare.call(e,function(e,r){if(t.locked=!0,"object"==typeof e)for(var o in e)n[o]=e[o];else n[e]=r;for(var a=0,u=t.importers.length;u>a;a++){var d=t.importers[a];if(!d.locked)for(var i=0;i<d.dependencies.length;++i)d.dependencies[i]===t&&d.setters[i](n)}return t.locked=!1,r},{id:r.name});t.setters=o.setters,t.execute=o.execute;for(var a=0,i=r.normalizedDeps.length;i>a;a++){var l,s=r.normalizedDeps[a],c=v[s],f=y[s];f?l=f.exports:c&&!c.declarative?l=c.esModule:c?(d(c),f=c.module,l=f.exports):l=p(s),f&&f.importers?(f.importers.push(t),t.dependencies.push(f)):t.dependencies.push(null),t.setters[a]&&t.setters[a](l)}}}function i(e){var r,t=v[e];if(t)t.declarative?f(e,[]):t.evaluated||l(t),r=t.module.exports;else if(r=p(e),!r)throw new Error("Unable to load dependency "+e+".");return(!t||t.declarative)&&r&&r.__useDefault?r["default"]:r}function l(r){if(!r.module){var t={},n=r.module={exports:t,id:r.name};if(!r.executingRequire)for(var o=0,a=r.normalizedDeps.length;a>o;o++){var u=r.normalizedDeps[o],d=v[u];d&&l(d)}r.evaluated=!0;var c=r.execute.call(e,function(e){for(var t=0,n=r.deps.length;n>t;t++)if(r.deps[t]==e)return i(r.normalizedDeps[t]);throw new TypeError("Module "+e+" not declared as a dependency.")},t,n);void 0!==typeof c&&(n.exports=c),t=n.exports,t&&t.__esModule?r.esModule=t:r.esModule=s(t)}}function s(r){var t={};if(("object"==typeof r||"function"==typeof r)&&r!==e)if(m)for(var n in r)"default"!==n&&c(t,r,n);else{var o=r&&r.hasOwnProperty;for(var n in r)"default"===n||o&&!r.hasOwnProperty(n)||(t[n]=r[n])}return t["default"]=r,x(t,"__useDefault",{value:!0}),t}function c(e,r,t){try{var n;(n=Object.getOwnPropertyDescriptor(r,t))&&x(e,t,n)}catch(o){return e[t]=r[t],!1}}function f(r,t){var n=v[r];if(n&&!n.evaluated&&n.declarative){t.push(r);for(var o=0,a=n.normalizedDeps.length;a>o;o++){var u=n.normalizedDeps[o];-1==g.call(t,u)&&(v[u]?f(u,t):p(u))}n.evaluated||(n.evaluated=!0,n.module.execute.call(e))}}function p(e){if(I[e])return I[e];if("@node/"==e.substr(0,6))return I[e]=s(D(e.substr(6)));var r=v[e];if(!r)throw"Module "+e+" not present.";return a(e),f(e,[]),v[e]=void 0,r.declarative&&x(r.module.exports,"__esModule",{value:!0}),I[e]=r.declarative?r.module.exports:r.esModule}var v={},g=Array.prototype.indexOf||function(e){for(var r=0,t=this.length;t>r;r++)if(this[r]===e)return r;return-1},m=!0;try{Object.getOwnPropertyDescriptor({a:0},"a")}catch(h){m=!1}var x;!function(){try{Object.defineProperty({},"a",{})&&(x=Object.defineProperty)}catch(e){x=function(e,r,t){try{e[r]=t.value||t.get.call(e)}catch(n){}}}}();var y={},D="undefined"!=typeof System&&System._nodeRequire||"undefined"!=typeof require&&require.resolve&&"undefined"!=typeof process&&require,I={"@empty":{}};return function(e,n,o,a){return function(u){u(function(u){for(var d={_nodeRequire:D,register:r,registerDynamic:t,get:p,set:function(e,r){I[e]=r},newModule:function(e){return e}},i=0;i<n.length;i++)(function(e,r){r&&r.__esModule?I[e]=r:I[e]=s(r)})(n[i],arguments[i]);a(d);var l=p(e[0]);if(e.length>1)for(var i=1;i<e.length;i++)p(e[i]);return o?l["default"]:l})}}}("undefined"!=typeof self?self:global)

(["1"], ["6","3"], true, function($__System) {
var require = this.require, exports = this.exports, module = this.module;
$__System.registerDynamic('2', ['3'], true, function ($__require, exports, module) {
    "use strict";

    var define,
        global = this || self,
        GLOBAL = global;
    var core_1 = $__require('3');
    var FaDirective = function () {
        function FaDirective(el) {
            this.el = el.nativeElement;
            this.el.classList.add('fa');
        }
        FaDirective.prototype.ngOnChanges = function (changes) {
            for (var key in changes) {
                var previousValue = changes[key].previousValue;
                var currentValue = changes[key].currentValue;
                switch (key) {
                    case 'name':
                        if (typeof previousValue === 'string') {
                            this.el.classList.remove("fa-" + previousValue);
                        }
                        this.el.classList.add("fa-" + currentValue);
                        break;
                    case 'alt':
                        // TODO(Write code for the alt parameter)
                        break;
                    case 'size':
                        if (FaDirective.sizeValidator.test(currentValue)) {
                            if (previousValue === 1) {
                                this.el.classList.remove('fa-lg');
                            } else if (typeof previousValue === 'string') {
                                this.el.classList.remove("fa-" + previousValue + "x");
                            }
                            if (currentValue === 1) {
                                this.el.classList.add('fa-lg');
                            } else {
                                this.el.classList.add("fa-" + currentValue + "x");
                            }
                        }
                        break;
                    case 'stack':
                        if (FaDirective.sizeValidator.test(currentValue)) {
                            if (typeof previousValue === 'string') {
                                this.el.classList.remove("fa-stack-" + previousValue + "x");
                            }
                            this.el.classList.add("fa-stack-" + currentValue + "x");
                        }
                        break;
                    case 'flip':
                        if (FaDirective.flipValidator.test(currentValue)) {
                            if (typeof previousValue === 'string') {
                                this.el.classList.remove("fa-flip-" + previousValue);
                            }
                            this.el.classList.add("fa-flip-" + currentValue);
                        }
                        break;
                    case 'pull':
                        if (FaDirective.pullValidator.test(currentValue)) {
                            if (typeof previousValue === 'string') {
                                this.el.classList.remove("fa-pull-" + previousValue);
                            }
                            this.el.classList.add("fa-pull-" + currentValue);
                        }
                        break;
                    case 'rotate':
                        if (FaDirective.rotateValidator.test(currentValue)) {
                            if (typeof previousValue === 'string') {
                                this.el.classList.remove("fa-rotate-" + previousValue);
                            }
                            this.el.classList.add("fa-rotate-" + currentValue);
                        }
                        break;
                    case 'border':
                        if (currentValue) {
                            this.el.classList.add('fa-border');
                        } else if (typeof previousValue === 'string') {
                            this.el.classList.remove('fa-border');
                        }
                        break;
                    case 'spin':
                        if (currentValue) {
                            this.el.classList.add('fa-spin');
                        } else if (typeof previousValue === 'string') {
                            this.el.classList.remove('fa-spin');
                        }
                        break;
                    case 'fw':
                        if (currentValue) {
                            this.el.classList.add('fa-fw');
                        } else if (typeof previousValue === 'string') {
                            this.el.classList.remove('fa-fw');
                        }
                        break;
                    case 'inverse':
                        if (currentValue) {
                            this.el.classList.add('fa-inverse');
                        } else if (typeof previousValue === 'string') {
                            this.el.classList.remove('fa-inverse');
                        }
                        break;
                }
            }
        };
        FaDirective.sizeValidator = /[1-5]/;
        FaDirective.flipValidator = /['horizontal'|'vertical']/;
        FaDirective.pullValidator = /['right'|'left']/;
        FaDirective.rotateValidator = /[90|180|270]/;
        FaDirective.decorators = [{ type: core_1.Directive, args: [{
                selector: '[fa]',
                inputs: ['name', 'alt', 'size', 'stack', 'flip', 'pull', 'rotate', 'border', 'spin', 'fw', 'inverse']
            }] }];
        /** @nocollapse */
        FaDirective.ctorParameters = [{ type: core_1.ElementRef }];
        return FaDirective;
    }();
    exports.FaDirective = FaDirective;
    return module.exports;
});
$__System.registerDynamic('4', ['3'], true, function ($__require, exports, module) {
    "use strict";

    var define,
        global = this || self,
        GLOBAL = global;
    var core_1 = $__require('3');
    var core_2 = $__require('3');
    var core_3 = $__require('3');
    var FA_COMPONENT_TEMPLATE = "\n  <i [ngClass]=\"classList\"></i>\n";
    var FaComponent = function () {
        function FaComponent(el) {
            // TODO (travelist): Support for fa-li selector
            // if (el.nativeElement.tagName == 'FA')
            // else this.classList = ['fa', 'fa-li']
            this.classList = ['fa'];
        }
        FaComponent.prototype.ngOnChanges = function (changes) {
            for (var key in changes) {
                var previousValue = changes[key].previousValue;
                var currentValue = changes[key].currentValue;
                switch (key) {
                    case 'name':
                        this.removeFaClass("fa-" + previousValue);
                        this.addFaClass("fa-" + currentValue);
                        break;
                    case 'alt':
                        // TODO(travelist): Write code for the alt parameter
                        break;
                    case 'size':
                        if (FaComponent.sizeValidator.test(currentValue)) {
                            if (previousValue === 1) {
                                this.removeFaClass('fa-lg');
                            } else {
                                this.removeFaClass("fa-" + previousValue + "x");
                            }
                            if (currentValue === 1) {
                                this.classList.push('fa-lg');
                            } else {
                                this.classList.push("fa-" + currentValue + "x");
                            }
                        }
                        break;
                    case 'stack':
                        if (FaComponent.sizeValidator.test(currentValue)) {
                            this.removeFaClass("fa-stack-" + previousValue + "x");
                            this.addFaClass("fa-stack-" + currentValue + "x");
                        }
                        break;
                    case 'flip':
                        if (FaComponent.flipValidator.test(currentValue)) {
                            this.removeFaClass("fa-flip-" + previousValue);
                            this.addFaClass("fa-flip-" + currentValue);
                        }
                        break;
                    case 'pull':
                        if (FaComponent.pullValidator.test(currentValue)) {
                            this.removeFaClass("fa-pull-" + previousValue);
                            this.addFaClass("fa-pull-" + currentValue);
                        }
                        break;
                    case 'rotate':
                        if (FaComponent.rotateValidator.test(currentValue)) {
                            this.removeFaClass("fa-rotate-" + previousValue);
                            this.addFaClass("fa-rotate-" + currentValue);
                        }
                        break;
                    case 'border':
                        if (currentValue) {
                            this.addFaClass('fa-border');
                        } else {
                            this.removeFaClass('fa-border');
                        }
                        break;
                    case 'spin':
                        if (currentValue) {
                            this.addFaClass('fa-spin');
                        } else {
                            this.removeFaClass('fa-spin');
                        }
                        break;
                    case 'fw':
                        if (currentValue) {
                            this.addFaClass('fa-fw');
                        } else {
                            this.removeFaClass('fa-fw');
                        }
                        break;
                    case 'inverse':
                        if (currentValue) {
                            this.addFaClass('fa-inverse');
                        } else {
                            this.removeFaClass('fa-inverse');
                        }
                        break;
                }
            }
        };
        FaComponent.prototype.addFaClass = function (className) {
            // better to check uniqueness
            this.classList.push(className);
        };
        FaComponent.prototype.removeFaClass = function (className) {
            var index;
            if ((index = this.classList.indexOf(className)) >= 0) {
                this.classList.splice(index, 1);
            }
        };
        FaComponent.sizeValidator = /[1-5]/;
        FaComponent.flipValidator = /['horizontal'|'vertical']/;
        FaComponent.pullValidator = /['right'|'left']/;
        FaComponent.rotateValidator = /[90|180|270]/;
        FaComponent.decorators = [{ type: core_1.Component, args: [{
                selector: 'fa',
                template: FA_COMPONENT_TEMPLATE
            }] }];
        /** @nocollapse */
        FaComponent.ctorParameters = [{ type: core_2.ElementRef }];
        FaComponent.propDecorators = {
            'name': [{ type: core_3.Input }],
            'alt': [{ type: core_3.Input }],
            'size': [{ type: core_3.Input }],
            'stack': [{ type: core_3.Input }],
            'flip': [{ type: core_3.Input }],
            'pull': [{ type: core_3.Input }],
            'rotate': [{ type: core_3.Input }],
            'border': [{ type: core_3.Input }],
            'spin': [{ type: core_3.Input }],
            'fw': [{ type: core_3.Input }],
            'inverse': [{ type: core_3.Input }]
        };
        return FaComponent;
    }();
    exports.FaComponent = FaComponent;
    return module.exports;
});
$__System.registerDynamic('5', ['3', '6', '2', '4'], true, function ($__require, exports, module) {
    "use strict";

    var define,
        global = this || self,
        GLOBAL = global;
    var core_1 = $__require('3');
    var common_1 = $__require('6');
    var fa_directive_1 = $__require('2');
    var fa_component_1 = $__require('4');
    //import { FaStackComponent } from './components/fa-stack.component';
    var Angular2FontawesomeModule = function () {
        function Angular2FontawesomeModule() {}
        Angular2FontawesomeModule.decorators = [{ type: core_1.NgModule, args: [{
                imports: [common_1.CommonModule],
                declarations: [fa_directive_1.FaDirective, fa_component_1.FaComponent],
                exports: [fa_directive_1.FaDirective, fa_component_1.FaComponent]
            }] }];
        /** @nocollapse */
        Angular2FontawesomeModule.ctorParameters = [];
        return Angular2FontawesomeModule;
    }();
    exports.Angular2FontawesomeModule = Angular2FontawesomeModule;
    return module.exports;
});
$__System.registerDynamic("1", ["5"], true, function ($__require, exports, module) {
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var index_1 = $__require("5");
  exports.Angular2FontawesomeModule = index_1.Angular2FontawesomeModule;
  return module.exports;
});
})
(function(factory) {
  if (typeof define == 'function' && define.amd)
    define(["@angular/common","@angular/core"], factory);
  else if (typeof module == 'object' && module.exports && typeof require == 'function')
    module.exports = factory(require("@angular/common"), require("@angular/core"));
  else
    throw new Error("Module must be loaded as AMD or CommonJS");
});